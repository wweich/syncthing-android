buildscript {
    repositories {
        mavenCentral()
        jcenter()

    }

    dependencies {
        classpath 'com.android.tools.build:gradle:1.2.3'
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.11.3'
        classpath "jp.leafytree.gradle:gradle-android-scala-plugin:1.4"
    }
}

apply plugin: 'com.android.application'
apply plugin: 'jp.leafytree.android-scala'
apply plugin: 'com.github.ben-manes.versions'

repositories {
    mavenCentral()
    maven {
        url 'https://raw.github.com/kolavar/android-support-v4-preferencefragment/master/maven-repository/'
    }
    maven {
        url 'http://jcenter.bintray.com'
    }
}

dependencies {
    compile 'eu.chainfire:libsuperuser:1.0.0.201504231659'
    compile 'com.android.support:appcompat-v7:22.1.0'
    compile 'com.android.support:support-v4-preferencefragment:1.0.0@aar'
    compile 'com.android.support:multidex:1.0.1'
    compile "org.scala-lang:scala-library:2.11.7"
    androidTestCompile 'com.squareup.okhttp:mockwebserver:2.4.0'
    compile 'io.spray:spray-json_2.11:1.3.2'
    compile 'joda-time:joda-time:2.8.1'
    compile 'com.android.support:multidex:1.0.1'
    compile "org.scala-lang:scala-library:2.11.6"
    androidTestCompile "com.android.support:multidex-instrumentation:1.0.1", { exclude module: "multidex" }
}

preBuild {
    dependsOn 'buildNative'
}

project.archivesBaseName = 'syncthing'

android {
    compileSdkVersion 22
    buildToolsVersion "22.0.1"

    defaultConfig {
        applicationId "com.nutomic.syncthingandroid"
        minSdkVersion 8
        targetSdkVersion 22
        versionCode 71
        versionName "0.6.5"
        multiDexEnabled true
        testApplicationId 'com.nutomic.syncthingandroid.test'
        testHandleProfiling true
        testFunctionalTest true
        testInstrumentationRunner "com.android.test.runner.MultiDexTestRunner"
    }

    sourceSets.main.jniLibs.srcDir file("libs/")

    signingConfigs {
        release {
            if (System.getenv("key_alias")) {
                storeFile = file(System.getenv("key_store"))
                storePassword = System.getenv("key_store_password")
                keyAlias = System.getenv("key_alias")
                keyPassword = System.getenv("key_alias_password")
            }
        }
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            debuggable true
            testCoverageEnabled true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-android.txt'
            if (System.getenv("key_alias")) {
                signingConfig signingConfigs.release
            }
        }
    }

    flavorDimensions "abi", "minsdk"

    productFlavors {
        // Increasing minSdkVersion reduces compilation time for MultiDex.
        dev {
            dimension "minsdk"
            minSdkVersion 21
        }
        rel {
            dimension "minsdk"
            minSdkVersion 15
        }
        x86 {
            dimension "abi"
            versionCode Integer.parseInt("4" + defaultConfig.versionCode)
            ndk {
                abiFilter "x86"
            }
        }
        arm {
            dimension "abi"
            versionCode Integer.parseInt("3" + defaultConfig.versionCode)
            ndk {
                abiFilter "armeabi"
            }
        }
        fat {
            dimension "abi"
            versionCode Integer.parseInt("0" + defaultConfig.versionCode)
        }
    }
}

task buildNative(type: Exec) {
    outputs.upToDateWhen { false }
    executable = './build-syncthing.sh'
}

task copyNative(type: Copy) {
    def lib_dir = "libs/"
    new File(lib_dir).mkdirs()
    def st_dir = "bin/";
    from st_dir + 'syncthing-x86', st_dir + 'syncthing-armeabi';
    into lib_dir
    rename('syncthing-x86', 'x86/libsyncthing.so')
    rename('syncthing-armeabi', 'armeabi/libsyncthing.so')
}
buildNative.finalizedBy copyNative

task cleanBin(type: Delete) {
    delete 'bin/'
}
copyNative.finalizedBy cleanBin

task cleanNative(type: Delete) {
    delete 'bin/'
    delete 'build/'
    delete 'libs/'
    delete 'ext/syncthing/bin/'
    delete 'ext/syncthing/pkg/'
}
clean.dependsOn cleanNative

